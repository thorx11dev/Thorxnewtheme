Here's an improved prompt for your Replit Advanced Assistant:

---

**Improved Prompt:**

"Fix content overflow issue on the landing page's mobile view. In Images 1-2, sections 2 and 3 have content hidden beneath the THORX branding header (the beige area with the THORX logo). The affected content includes:
- Section 2: "EARN PKR IN 3 WAYS" heading and cards
- Section 3: "WHY THORX WORKS" heading and statistics

**Root cause to investigate:**
- Likely a z-index or fixed positioning conflict with the header
- Possibly missing padding-top on the main content container to account for header height

**Requirements:**
- Fix only the mobile viewport (max-width: 768px)
- Do NOT modify desktop layouts
- Do NOT modify any other pages or sections
- Preserve all existing functionality and animations

**Expected outcome:**
All content in sections 2 and 3 should be fully visible below the header on mobile screens."

---

## What I Changed and Why:

### 1. **Specified the exact problem location**
   - **Before:** "some of the content of second and third section"
   - **After:** Listed specific elements: "EARN PKR IN 3 WAYS heading," "WHY THORX WORKS heading and statistics"
   - **Why:** Vague descriptions force the AI to guess. Naming exact elements from the screenshots ensures precise targeting.

### 2. **Added technical hypothesis**
   - **Before:** Just described the symptom
   - **After:** "Likely a z-index or fixed positioning conflict" + "Possibly missing padding-top"
   - **Why:** Guides the AI toward the probable CSS issues causing overlay problems, leading to faster diagnosis.

### 3. **Used proper technical terminology**
   - **Before:** "hiding below the Thorx branding area"
   - **After:** "hidden beneath the THORX branding header" + "z-index or fixed positioning conflict"
   - **Why:** "Branding area" is ambiguous. "Header" is standard web terminology. Technical terms like "z-index" help the AI understand this is a CSS stacking context issue.

### 4. **Clarified viewport scope**
   - **Before:** "mobile screen version"
   - **After:** "mobile viewport (max-width: 768px)"
   - **Why:** "Mobile screen" could mean 320px or 768px. Specifying a breakpoint gives exact constraints for media queries.

### 5. **Structured with clear sections**
   - **Before:** Single paragraph mixing problem, constraint, and instruction
   - **After:** Separate sections for problem, root cause, requirements, and outcome
   - **Why:** Logical structure helps AI process complex instructions systematically.

### 6. **Made constraints explicit and specific**
   - **Before:** "DONT MAKE ANY CHANGES WITH Desktop screens and other sections"
   - **After:** Bulleted list: "Fix only mobile viewport," "Do NOT modify desktop layouts," etc.
   - **Why:** Breaking constraints into separate bullet points prevents the AI from accidentally overlooking one. Using "Do NOT" is clearer than all-caps.

### 7. **Removed redundancy**
   - **Before:** "I have noticed" (repeated twice), "you can see the provided images"
   - **After:** Direct statements referencing "Images 1-2"
   - **Why:** First-person narrative wastes tokens. The AI doesn't need to know how you discovered the issue, just what the issue is.

### 8. **Added expected outcome**
   - **Before:** Implied fix but not specified
   - **After:** "All content in sections 2 and 3 should be fully visible below the header"
   - **Why:** Defines success criteria so the AI knows when the fix is complete.

### 9. **Referenced images properly**
   - **Before:** "provided images for checking"
   - **After:** "In Images 1-2"
   - **Why:** Direct image references are more professional and help the AI correlate visual evidence with the problem description.

This rewritten prompt gives your AI assistant a clear problem statement, technical context, precise constraints, and measurable success criteriaâ€”all of which lead to faster, more accurate fixes.